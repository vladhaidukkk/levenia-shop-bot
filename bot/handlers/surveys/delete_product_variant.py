from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message
from aiogram.utils import markdown

from bot.db.models import UserModel
from bot.db.queries.product_variant import delete_product_variant
from bot.errors import ProductVariantAlreadyDeletedError, ProductVariantNotFoundError
from bot.filters.role import ManagerFilter
from bot.keyboards.reply.cancel_survey import cancel_survey_reply_kb
from bot.keyboards.reply.root import RootKeyboardText, root_reply_kb

router = Router(name=__name__)
router.message.filter(ManagerFilter())


class DeleteProductVariantSurvey(StatesGroup):
    product_variant_id = State()


@router.message(F.text == RootKeyboardText.DELETE_PRODUCT_VARIANT)
async def delete_product_variant_button_handler(message: Message, state: FSMContext) -> None:
    await state.set_state(DeleteProductVariantSurvey.product_variant_id)
    await message.answer(
        "üÜîÔ∏è –í–≤–µ–¥—ñ—Ç—å ID –≤–∞—Ä—ñ–∞–Ω—Ç—É –æ–¥—è–≥—É, —è–∫–∏–π –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏:", reply_markup=cancel_survey_reply_kb()
    )


@router.message(DeleteProductVariantSurvey.product_variant_id, F.text.regexp(r"^\d+$"))
async def delete_product_variant_survey_product_variant_id_handler(
    message: Message, state: FSMContext, user: UserModel
) -> None:
    await state.update_data({"product_variant_id": int(message.text)})
    data = await state.get_data()

    try:
        await delete_product_variant(id_=data["product_variant_id"])
    except ProductVariantNotFoundError:
        await message.answer("‚ö†Ô∏è –í–∞—Ä—ñ–∞–Ω—Ç –æ–¥—è–≥—É –∑ —Ç–∞–∫–∏–º ID –Ω–µ —ñ—Å–Ω—É—î. –°–ø—Ä–æ–¥—É–π—Ç–µ —â–µ —Ä–∞–∑:")
        return
    except ProductVariantAlreadyDeletedError:
        await message.answer("‚ö†Ô∏è –í–∞—Ä—ñ–∞–Ω—Ç –æ–¥—è–≥ –∑ —Ü–∏–º ID –≤–∂–µ –≤–∏–¥–∞–ª–µ–Ω–æ. –í–≤–µ–¥—ñ—Ç—å —ñ–Ω—à–∏–π ID:")
        return

    await state.clear()
    await message.answer(
        markdown.text(
            "üóëÔ∏è –í–∞—Ä—ñ–∞–Ω—Ç –æ–¥—è–≥—É –∑ ID:",
            markdown.hcode(data["product_variant_id"]),
            "–≤–∏–¥–∞–ª–µ–Ω–æ. –í–∏ –º–æ–∂–µ—Ç–µ –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ –π–æ–≥–æ –±—É–¥—å-–∫–æ–ª–∏.",
        ),
        reply_markup=root_reply_kb(role=user.role),
    )


@router.message(DeleteProductVariantSurvey.product_variant_id, ~F.text.regexp(r"^\d+$"))
async def delete_product_variant_survey_invalid_product_variant_id_handler(message: Message) -> None:
    await message.answer("‚ö†Ô∏è ID –≤–∞—Ä—ñ–∞–Ω—Ç—É –æ–¥—è–≥—É –≤–º—ñ—â–∞—î –ª–∏—à–µ —Ü–∏—Ñ—Ä–∏. –í–≤–µ–¥—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è —â–µ —Ä–∞–∑:")
